{"name":"JFinal-ext2","tagline":"JFinal扩展2","body":"# JFinal-ext2\r\n\r\n#####v2.0.1更新内容\r\n1. 自动 mapping 生成的 model;\r\n2. 在 model 中添加了一个常量 table,为对应的表名,便于在手写 sql 时候使用;\r\n\r\n```java\r\n/**\r\n * Generated by JFinal.\r\n */\r\n@SuppressWarnings(\"serial\")\r\npublic class Zcq extends BaseZcq<Zcq> {\r\n\tpublic static final Zcq dao = new Zcq();\r\n\tpublic static final String table = \"zcq\";\r\n}\r\n```\r\n\r\n3. 修改了 cfg.txt 中数据源的配置格式;\r\n\r\n```shell\r\n#--------------------------------------------------------------------#\r\n#  database　Config\r\n# 1. db.ds: db datasource name, use ',' split. eg :mysql,oracle;数据源 name;\r\n# 2. db.*.active:ture, use db,* is the ds name;数据源为*的数据源是否激活;\r\n# 3. db.*.url: db url,* is the ds name;数据源为*的数据库的 url;\r\n# 4. db.*.user: db username,* is the ds name;数据源为*的数据库用户名;\r\n# 5. db.*.password: db password,* is the ds name, 数据源为*的数据库密码,已加密\r\n#\tuse `java -cp druid-xx.jar com.alibaba.druid.filter.config.ConfigTools your_password`\r\n#\tgenerate your encrypt password;使用com.alibaba.druid.filter.config.ConfigTools获得加密密码;\r\n# 6. db.*.initsize: db pool init size,* is the ds name;数据源为*的连接池初始化大小;\r\n# 7. db.*.maxactive: db pool maxactive,* is the ds name;数据源为*的连接池最大连接数;\r\n# 8. db.showsql: ture, show execute sql;是否显示 sql;\r\n#--------------------------------------------------------------------#\r\ndb.ds = mysql\r\ndb.mysql.active = false\r\ndb.mysql.url = testing_host/db\r\ndb.mysql.user = \r\ndb.mysql.password = lCzd9geWAuAuJtLhpaG/J+d28H8KiMFAWopxXkYpMNdUai6Xe/LsPqMQeg5MIrmvtMa+hzycdRhWs29ZUPU1IQ==\r\ndb.mysql.initsize = 6\r\ndb.mysql.maxactive = 100\r\ndb.showsql = true\r\n```\r\n\r\n#####v2.0.0更新内容\r\n1. 基于 JFinal2.1;\r\n2. 集成了 JFinal 牛逼的 Generetor, 让你自动生成 model 更Easy:);\r\n3. 修改了配置文件格式,加入了很多的说明;\r\n4. 扩展DruidPlugin做了一个DruidEncryptPlugin,在配置文件中使用加密的数据库密码;\r\n5. 使用 maven 管理项目;\r\n\r\n#####配置说明\r\n```shell\r\n#--------------------------------------------------------------------#\r\n#  database　Config\r\n# 1. db.ds: db datasource name, use ',' split. eg :mysql,oracle;数据源 name;\r\n# 2. db.*.active:ture, use db,* is the ds name;数据源为*的数据源是否激活;\r\n# 3. db.*.url: db url,* is the ds name;数据源为*的数据库的 url;\r\n# 4. db.*.user: db username,* is the ds name;数据源为*的数据库用户名;\r\n# 5. db.*.password: db password,* is the ds name, 数据源为*的数据库密码,已加密\r\n#\tuse `java -cp druid-xx.jar com.alibaba.druid.filter.config.ConfigTools your_password`\r\n#\tgenerate your encrypt password;使用com.alibaba.druid.filter.config.ConfigTools获得加密密码;\r\n# 6. db.*.initsize: db pool init size,* is the ds name;数据源为*的连接池初始化大小;\r\n# 7. db.*.maxactive: db pool maxactive,* is the ds name;数据源为*的连接池最大连接数;\r\n# 8. db.showsql: ture, show execute sql;是否显示 sql;\r\n#--------------------------------------------------------------------#\r\ndb.ds = mysql\r\ndb.mysql.active = false\r\ndb.mysql.url = testing_host/db\r\ndb.mysql.user = \r\ndb.mysql.password = lCzd9geWAuAuJtLhpaG/J+d28H8KiMFAWopxXkYpMNdUai6Xe/LsPqMQeg5MIrmvtMa+hzycdRhWs29ZUPU1IQ==\r\ndb.mysql.initsize = 6\r\ndb.mysql.maxactive = 100\r\ndb.showsql = true\r\n#--------------------------------------------------------------------#\r\n# Generator Config\r\n# 1. ge.run: true, generate the model and basemmodels;是否生成 models;\r\n# 2. ge.base.model.outdir: the basemodel output dir path;basemodel输出目录;\r\n# 3. ge.base.model.package: the basemodel package;basemodel 包名;\r\n# 4. ge.model.outdir: the model output dir path;model输出目录;\r\n# 5. ge.model.package: the model package;model包名;\r\n#--------------------------------------------------------------------#\r\nge.run=true\r\nge.base.model.outdir=\r\nge.base.model.package=\r\nge.model.outdir=\r\nge.model.package=\r\n#--------------------------------------------------------------------#\r\n## App Config\r\n# 1. app.dev: true, the app is debug mode;是否为 debug 模式;\r\n# 2. app.upload.basedir: upload file save base dir;上传文件存放的基目录;\r\n# 3. app.post: ture, use Http Post method;\r\n# 4. app.name: app's name;当前 app 的名字;\r\n#--------------------------------------------------------------------#\r\napp.dev = true\r\napp.upload.basedir = /var/uploads\r\napp.post = true\r\napp.name = \r\n```\r\n\r\n\r\n基于JFinal 2.0加入一些kit，它们有\r\n\r\n1. 扩展JFinalConfig=> JFinalConfigExt\r\n\t1.1 给每一个app设置一个name；\r\n\t1.2 从配置文件中获取文件的保存路径；\r\n\t1.3 获取devmode；\r\n\t1.4 打包DruidPlugin和ActiveRecordPlugin；\r\n\t以上让你的config更加轻便\r\n2. 加入ActionExtentionHandler\r\n\t更方面的伪静态处理\r\n3. 加入 NotFoundActionInterceptor 当找不到对应的 action 时，fire 404\r\n4. com.jfinal.ext2.kit\r\n\t4.1 DateTimeKit;\r\n\t4.2 DDLKit;\r\n\t...\r\n5. com.jfinal.ext2.validate.ValidatorExt\r\n\t默认开启短路，校验失败403\r\n6. 加入多个文件上传的FileRenamePolicy\r\n\t6.1 CustomNameFileRenamePolicy 自定义文件名称\r\n\t6.2 CustomParentDirFileRenamePolicy 自定义上级目录名称\r\n\t6.3 DateRandomFileRenamePolicy 按照时间分割目录\r\n\t6.4 RandomFileRenamePolicy 随机文件名称\r\n####1. jfex2的依赖\r\n完整的依赖列表\r\n\r\n```java\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<groupId>com.jfinal</groupId>\r\n\t<artifactId>jfinal-ext2</artifactId>\r\n\t<version>2.0.1</version>\r\n\t<name>jfinal-ext2</name>\r\n\t<description>jfinal-ext2</description>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>junit</groupId>\r\n\t\t\t<artifactId>junit</artifactId>\r\n\t\t\t<version>4.8.2</version>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.jfinal</groupId>\r\n\t\t\t<artifactId>jfinal</artifactId>\r\n\t\t\t<version>2.1-SNAPSHOT</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework</groupId>\r\n\t\t\t<artifactId>spring-context</artifactId>\r\n\t\t\t<version>3.2.4.RELEASE</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.alibaba</groupId>\r\n\t\t\t<artifactId>druid</artifactId>\r\n\t\t\t<version>1.0.5</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>log4j</groupId>\r\n\t\t\t<artifactId>log4j</artifactId>\r\n\t\t\t<version>1.2.16</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.jfinal</groupId>\r\n\t\t\t<artifactId>cos</artifactId>\r\n\t\t\t<version>26Dec2008</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.alibaba</groupId>\r\n\t\t\t<artifactId>fastjson</artifactId>\r\n\t\t\t<version>1.2.6</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.commons</groupId>\r\n\t\t\t<artifactId>commons-lang3</artifactId>\r\n\t\t\t<version>3.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>commons-collections</groupId>\r\n\t\t\t<artifactId>commons-collections</artifactId>\r\n\t\t\t<version>3.2.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.google.guava</groupId>\r\n\t\t\t<artifactId>guava</artifactId>\r\n\t\t\t<version>18.0</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t\t<version>5.1.34</version>\r\n\t\t</dependency>\r\n\t\t<!-- jfext dependency start -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.freemarker</groupId>\r\n\t\t\t<artifactId>freemarker</artifactId>\r\n\t\t\t<version>2.3.21</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.quartz-scheduler</groupId>\r\n\t\t\t<artifactId>quartz</artifactId>\r\n\t\t\t<version>1.8.6</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.quartz-scheduler</groupId>\r\n\t\t\t<artifactId>quartz</artifactId>\r\n\t\t\t<version>2.2.1</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.poi</groupId>\r\n\t\t\t<artifactId>poi</artifactId>\r\n\t\t\t<version>3.10.1</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.poi</groupId>\r\n\t\t\t<artifactId>poi-ooxml</artifactId>\r\n\t\t\t<version>3.10.1</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.mongodb</groupId>\r\n\t\t\t<artifactId>mongo-java-driver</artifactId>\r\n\t\t\t<version>2.11.2</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>it.sauronsoftware.cron4j</groupId>\r\n\t\t\t<artifactId>cron4j</artifactId>\r\n\t\t\t<version>2.2.5</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.activemq</groupId>\r\n\t\t\t<artifactId>activemq-core</artifactId>\r\n\t\t\t<version>5.7.0</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.jms</groupId>\r\n\t\t\t<artifactId>jms-api</artifactId>\r\n\t\t\t<version>1.1-rev-1</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>net.sf.jxls</groupId>\r\n\t\t\t<artifactId>jxls-core</artifactId>\r\n\t\t\t<version>0.9.9</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>redis.clients</groupId>\r\n\t\t\t<artifactId>jedis</artifactId>\r\n\t\t\t<version>2.2.1</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.crazycake</groupId>\r\n\t\t\t<artifactId>shiro-redis</artifactId>\r\n\t\t\t<version>1.0.0-RELEASE</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.shiro</groupId>\r\n\t\t\t<artifactId>shiro-all</artifactId>\r\n\t\t\t<version>1.2.2</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>net.sf.jxls</groupId>\r\n\t\t\t<artifactId>jxls-core</artifactId>\r\n\t\t\t<version>0.9.9</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<!-- jfext dependency end -->\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<version>3.3</version>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<source>1.7</source>\r\n\t\t\t\t\t<target>1.7</target>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-source-plugin</artifactId>\r\n\t\t\t\t<version>2.4</version>\r\n\t\t\t\t<executions>\r\n\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t<phase>package</phase>\r\n\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t<goal>jar-no-fork</goal>\r\n\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t</execution>\r\n\t\t\t\t</executions>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n</project>\r\n```\r\n其中部分为 jfex2依赖,大多为 jfext 依赖,使用时可以更加自己的需要添加依赖;\r\n\r\n####2. 配置说明\r\n\r\n完整的配置\r\n\r\n```shell\r\n#-----------------------------------------------------------------#\r\n#  database　Config\r\n# 1. db.ds: db datasource name, use ',' split. eg :mysql,oracle;\r\n# 2. db.*.active:ture, use db,* is the ds name;\r\n# 3. db.*.url: db url,* is the ds name;\r\n# 4. db.*.user: db username,* is the ds name;\r\n# 5. db.*.password: db password,* is the ds name, \r\n#\tuse `java -cp druid-xx.jar com.alibaba.druid.filter.config.ConfigTools your_password`\r\n#\tgenerate your encrypt password;\r\n# 6. db.*.initsize: db pool init size,* is the ds name;\r\n# 7. db.*.maxactive: db pool maxactive,* is the ds name;\r\n# 8. db.showsql: ture, show execute sql;\r\n#-----------------------------------------------------------------#\r\ndb.ds = mysql //配置数据源,目前主要测试了 mysql,oracle 没有经过测试,使用者自行测试。db.ds 数据格式,比如使用了 mysql和 oracle,那么 db.ds = mysql,oracle。注意使用英文输入下的\",\"。以下说明均以 db.ds = mysql 进行说明;\r\ndb.mysql.active = false //是否激活数据源,命名规范为->db.数据源名称.active,比如 db.mysql.active,db.oracle.active。\r\ndb.mysql.url = testing_host/db //数据库 url,命名规范->db.数据源名.url,比如 db.mysql.url,db.oracle.url。 \r\ndb.mysql.user = //数据库用户,命名规范->db.数据源名.user,比如db.mysql.user,db.oracle.user。\r\ndb.mysql.password = lCzd9geWAuAuJtLhpaG/J+d28H8KiMFAWopxXkYpMNdUai6Xe/LsPqMQeg5MIrmvtMa+hzycdRhWs29ZUPU1IQ== //数据库(已经加密)密码,命名规范->db.数据源名.password,比如 db.mysql.password,db.oracle.password。\r\ndb.mysql.initsize = 6 //数据库连接池初始大小,命名规范->db.数据源名.initsize,比如 db.mysql.initsize,db.oracle.initsize。\r\ndb.mysql.maxactive = 100 //数据库连接池最大激活数,命名规范->db.数据源名.maxactive,比如 db.mysql.maxactive,db.oracle.maxactive。\r\ndb.showsql = true //是否显示 sql\r\n#-----------------------------------------------------------------#\r\n# Generator Config\r\n# 1. ge.run: true, generate the model and basemmodels;//是否自动生成 BaseModel和 Model;\r\n# 2. ge.dict: true, generate the data dict;//是否生成数据词典;\r\n# 3. ge.base.model.outdir: the basemodel output dir path;//BaseModel 导出目录,可为绝对路径,也可以为相对路径;\r\n# 4. ge.base.model.package: the basemodel package;//BaseModel的包名;\r\n# 5. ge.model.outdir: the model output dir path;//Model导出目录,可为绝对路径,也可以为相对路径;\r\n# 6. ge.model.package: the model package;//Model 的包名;\r\n#-----------------------------------------------------------------#\r\nge.run=true\r\nge.dict=true\r\nge.base.model.outdir=\r\nge.base.model.package=\r\nge.model.outdir=\r\nge.model.package=\r\n#-----------------------------------------------------------------#\r\n## App Config\r\n# 1. app.dev: true, the app is debug mode;\r\n# 2. app.upload.basedir: upload file save base dir;\r\n# 3. app.post: ture, use Http Post method;\r\n# 4. app.name: app's name;\r\n#-----------------------------------------------------------------#\r\napp.dev = true\r\napp.upload.basedir = /var/uploads //上传文件的存储路径,最后的文件路径为:/var/uploads/app.name/xxxx,也就是/var/uploads/app 的名称/xxx。\r\napp.post = true //是否全部使用 post 方式。注意哦!!!这里设置了true 的话,你的 Controller 的 Action在浏览器上访问会404哦。\r\napp.name = \r\n```\r\n\r\n``特别注意\r\napp.post = true //是否全部使用 post 方式。注意哦!!!这里设置了true 的话,你的 Controller 的 Action在浏览器上访问会404哦。\r\n``\r\n\r\n####3. jfex2-Config & StandaloneDbConfig\r\n\r\n3.1 jfex2-config 主要用于 Web 项目中使用,当然也可以用于非 web 项目,建议在非web 中使用StandaloneDbConfig。\r\n\r\n几个重要的参数说明\r\n\r\n- JFinalConfigExt.APP_NAME 应用名称\r\n- JFinalConfigExt.UPLOAD_SAVE_DIR 应用存储路径\r\n- JFinalConfigExt.DEV_MODE 应用的模式\r\n\r\n3.2 jfex2-config做了什么?\r\n\r\njfex2-config 主要做的是解析 cfg.txt 配置文件的工作。并集成JF2.1Generator,数据库,ErrorPageView等配置。\r\n\r\n3.3 怎样在项目中使用 jfext2-config\r\n\r\n- 首先集成 JFinalConfigExt 做一个之类比如是这样的:\r\n\r\n\t```java\r\n\tpackage cn.zhucongqi;\r\n\t...\r\n\tpublic class Config extends JFinalConfigExt {\r\n\t\t...\r\n\t}\r\n\t```\r\n-  在 web.xml 配置\r\n\t\r\n\t```xml\r\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\" id=\"WebApp_ID\" version=\"3.1\">\r\n  <display-name>JFinal-Ext2-demo</display-name>\r\n  <welcome-file-list>\r\n    <welcome-file>index.html</welcome-file>\r\n    <welcome-file>index.htm</welcome-file>\r\n    <welcome-file>index.jsp</welcome-file>\r\n    <welcome-file>default.html</welcome-file>\r\n    <welcome-file>default.htm</welcome-file>\r\n    <welcome-file>default.jsp</welcome-file>\r\n  </welcome-file-list>\r\n  <filter>\r\n    <filter-name>jfinal</filter-name>\r\n    <filter-class>com.jfinal.core.JFinalFilter</filter-class>\r\n    <init-param>\r\n      <param-name>configClass</param-name>\r\n      <param-value>cn.zhucongqi.Config</param-value>\r\n    </init-param>\r\n  </filter>\r\n  <filter-mapping>\r\n    <filter-name>jfinal</filter-name>\r\n    <url-pattern>/*</url-pattern>\r\n  </filter-mapping>\r\n  <error-page>\r\n    <error-code>403</error-code>\r\n    <location>/WEB-INF/errorpages/403.jsp</location>\r\n  </error-page>\r\n  <error-page>\r\n    <error-code>404</error-code>\r\n    <location>/WEB-INF/errorpages/404.jsp</location>\r\n  </error-page>\r\n  <error-page>\r\n    <error-code>500</error-code>\r\n    <location>/WEB-INF/errorpages/500.jsp</location>\r\n  </error-page>\r\n</web-app>\r\n\t```\r\n\t\r\n####4. jfex2结构\r\n\r\n```\r\n.\r\n├── java\r\n│   └── com\r\n│       └── jfinal\r\n│           └── ext2\r\n│               ├── config\r\n│               │   ├── JFinalConfigExt.java\r\n│               │   └── StandaloneDbConfig.java\r\n│               ├── core //Controller 扩展\r\n│               │   ├── ControllerExt.java\r\n│               │   └── Service.java\r\n│               ├── ge //自动生成 BaseModel和 Model 的入口;\r\n│               │   └── Ge.java\r\n│               ├── handler\r\n│               │   └── ActionExtentionHandler.java\r\n│               ├── interceptor\r\n│               │   ├── ExceptionInterceptorExt.java\r\n│               │   └── NotFoundActionInterceptor.java\r\n│               ├── kit\r\n│               │   ├── DDLKit.java\r\n│               │   ├── DateTimeKit.java\r\n│               │   ├── EncodingKit.java\r\n│               │   ├── HexKit.java\r\n│               │   ├── HttpExtKit.java\r\n│               │   ├── JsonExtKit.java\r\n│               │   ├── MobileValidateKit.java\r\n│               │   ├── PageViewKit.java //PageView 的工具\r\n│               │   ├── RandomKit.java\r\n│               │   └── SqlKit.java\r\n│               ├── plugin\r\n│               │   ├── activerecord\r\n│               │   │   ├── generator\r\n│               │   │   │   └── ModelExtGenerator.java\r\n│               │   │   └── tx\r\n│               │   │       ├── DbTx.java\r\n│               │   │       ├── DbTxInterceptor.java\r\n│               │   │       └── Tx.java\r\n│               │   ├── druid\r\n│               │   │   └── DruidEncryptPlugin.java\r\n│               │   └── spring\r\n│               │       ├── Inject.java\r\n│               │       ├── IocInterceptor.java\r\n│               │       └── SpringPlugin.java\r\n│               ├── upload\r\n│               │   └── filerenamepolicy\r\n│               │       ├── CustomNameFileRenamePolicy.java\r\n│               │       ├── CustomParentDirFileRenamePolicy.java\r\n│               │       ├── DateRandomFileRenamePolicy.java\r\n│               │       ├── FileRenamePolicyWrapper.java\r\n│               │       ├── NamePolicy.java\r\n│               │       └── RandomFileRenamePolicy.java\r\n│               └── validate\r\n│                   └── ValidatorExt.java\r\n└── resources\r\n    ├── cfg.txt.example\r\n    ├── errorpages\r\n    │   ├── 403.jsp\r\n    │   ├── 404.jsp\r\n    │   └── 500.jsp\r\n    ├── log4j.properties.example\r\n    ├── readme.md\r\n    └── web.xml.example\r\n```\r\n\r\n####5. jfex2-Ge\r\n\r\njfex2-Ge 怎样使用?\r\n\r\n- 选中项目;\r\n- 右击项目,在菜单中选择Debug As -> Debug Configurations...;\r\n- 弹出Debug Configurations窗口,在左边找到Java Application双击它;\r\n- 此时在右边出现配置窗口,最上面是 name,设置一个名,比如为 Ge;\r\n- 在下面的第一栏为“Main”,确认Project 为当前已经选择的 Project;\r\n- Main.class 中输入 \"com.jfinal.ext2.ge.Ge\";\r\n- 配置完成点击 Debug 即可;\r\n\r\nDemo ： [http://git.oschina.net/brucezcq/JFinal-Ext2-Demo](http://git.oschina.net/brucezcq/JFinal-Ext2-Demo)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}